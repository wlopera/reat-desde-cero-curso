{"version":3,"sources":["components/Card/Card.jsx","components/Card/Cards.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","lang","url","fcolor","scolor","className","style","background","src","alt","Cards","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAwBeA,EAnBF,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OACjC,OACE,sBACEC,UAAU,OACVC,MAAO,CAAEC,WAAW,4BAAD,OAA8BJ,EAA9B,aAAyCC,EAAzC,MAFrB,UAIE,qBAAKI,IAAKN,EAAKO,IAAI,aACnB,6BAAKR,QCkCIS,EA3CD,WA4BZ,OACE,qBAAKJ,MAAO,CAAEC,WAAW,wCAAzB,SA5BW,CACX,CACEN,KAAM,SACNC,IAAK,2CACLC,OAAQ,UACRC,OAAQ,WAEV,CACEH,KAAM,OACNC,IAAK,yCACLC,OAAQ,UACRC,OAAQ,WAEV,CACEH,KAAM,QACNC,IAAK,0CACLC,OAAQ,UACRC,OAAQ,WAEV,CACEH,KAAM,OACNC,IAAK,yCACLC,OAAQ,UACRC,OAAQ,YAMFO,KAAI,gBAAGV,EAAH,EAAGA,KAAMC,EAAT,EAASA,IAAKC,EAAd,EAAcA,OAAQC,EAAtB,EAAsBA,OAAtB,OACR,cAAC,EAAD,CAEEH,KAAMA,EACNC,IAAKA,EACLC,OAAQA,EACRC,OAAQA,GAJHH,SC9BAW,EAJH,WACV,OAAO,cAAC,EAAD,KCUMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.562a4e71.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./card.css\";\r\n\r\nconst Card = ({ lang, url, fcolor, scolor }) => {\r\n  return (\r\n    <div\r\n      className=\"card\"\r\n      style={{ background: `linear-gradient(to left, ${fcolor}, ${scolor})` }}\r\n    >\r\n      <img src={url} alt=\"lang.svg\" />\r\n      <h3>{lang}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nCard.propTypes = {\r\n  lang: PropTypes.string,\r\n  img: PropTypes.string,\r\n  fscolor: PropTypes.string,\r\n  scolor: PropTypes.string,\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst Cards = () => {\r\n  const data = [\r\n    {\r\n      lang: \"Python\",\r\n      url: \"https://cdn.svgporn.com/logos/python.svg\",\r\n      fcolor: \"#00c3ff\",\r\n      scolor: \"#ffff1c\",\r\n    },\r\n    {\r\n      lang: \"Java\",\r\n      url: \"https://cdn.svgporn.com/logos/java.svg\",\r\n      fcolor: \"#D31027\",\r\n      scolor: \"#EA384D\",\r\n    },\r\n    {\r\n      lang: \"React\",\r\n      url: \"https://cdn.svgporn.com/logos/react.svg\",\r\n      fcolor: \"#000428\",\r\n      scolor: \"#004e92\",\r\n    },\r\n    {\r\n      lang: \"Perl\",\r\n      url: \"https://cdn.svgporn.com/logos/perl.svg\",\r\n      fcolor: \"#cc2b5e\",\r\n      scolor: \"#753a88\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div style={{ background: `linear-gradient(to left, #000, #FFF)` }}>\r\n      {data.map(({ lang, url, fcolor, scolor }) => (\r\n        <Card\r\n          key={lang}\r\n          lang={lang}\r\n          url={url}\r\n          fcolor={fcolor}\r\n          scolor={scolor}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import Cards from \"./components/Card/Cards\";\r\nconst App = () => {\r\n  return <Cards />;\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}